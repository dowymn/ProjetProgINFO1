<project name="LesBatisseurs_MoyenAge" default="run" basedir=".">
    <description>
        The card game which makes people build amazing buildings with well-payed workers and powerful machines.
    </description>
    <property name="src" location="src"/>
    <property name="build" location="build"/>
    <property name="jar"  location="${build}/jar"/>
    <property name="class"  location="${build}/class"/>
    <property name="javadoc"  location="${build}/javadoc"/>
    <property name="mainClass" value="Launcher"/>
    <property name="version" value="1.0"/>
    <property name="jarName" value="${mainClass}-${version}"/>
    <property name="test" value="${build}/test"/>

	<!-- Creation of the files used to store the data (jar, class files, etc.) -->
    <target name="init">
        <mkdir dir="${build}"/>
        <mkdir dir="${jar}"/>
        <mkdir dir="${class}"/>
        <mkdir dir="${test}"/>
    </target>

	<!-- Compilation of the code stored in ${src} into ${class}, exluding the test package -->
    <target name="compile" depends="init" description="compile the source ">
        <javac srcdir="${src}" destdir="${class}" includeantruntime="false">
            <exclude name="test/**"/>
        </javac>
    </target>

    <!-- Creation of the jar executable file using the compiled data in ${class} -->
    <target name="jar" depends="compile" description="generate the distribution" >
    	<copy todir="./data">
            <fileset dir="./data"/>
        </copy>
        <jar jarfile="${jar}/${jarName}.jar" basedir="${class}">
            <manifest>
                <attribute name="Main-Class" value="${mainClass}"/>
            </manifest>
        </jar>
    </target>


	<!-- Run the built jar stored in ${jar} -->
    <target name="run" depends="jar">
        <java jar="${jar}/${jarName}.jar" fork="true"/>

    </target>

	<!-- Clean all the build files -->
    <target name="clean">
        <delete dir="build"/>
    </target>

	<!-- Generate the javadoc of the code in ${javadoc} -->
    <target name="javadoc">
        <delete dir="${javadoc}"/>
        <javadoc author="true"
                 private="true"
                 destdir="${javadoc}">
            <fileset dir="${src}">
                <include name="**"/>
            </fileset>
        </javadoc>
    </target>

	<!-- Compilation of the code from ${src}/test into ${test} -->
    <target name="test-compile" depends="compile">
        <!-- Compile the code from ${src}/test and place it into ${test} -->
        <javac srcdir="${src}/test" destdir="${test}" includeantruntime="true" >
            <classpath>
                <pathelement location="/lib/hamcrest-core-1.3.jar"/>
                <pathelement location="/lib/junit-4.12.jar"/>
                <pathelement path="${class}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="test-compile">
        <!-- Launch all the test classes -->
        <junit printsummary="on" haltonfailure="off" fork="true" includeantruntime="true">
            <classpath>
                <pathelement location="./lib/hamcrest-core-1.3.jar"/>
                <pathelement location="//lib/junit-4.12.jar"/>
                <pathelement path="${test}"/>
                <pathelement path="${class}"/>
                <pathelement path="${java.class.path}"/>
            </classpath>
            <formatter type="brief"/>
            <batchtest todir="${test}">
                <fileset dir="${src}" includes="test/*.java"/>
            </batchtest>
        </junit>
    </target>
</project>


